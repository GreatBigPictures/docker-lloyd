#!/bin/sh -e

BACKUPS=/backups
SSH_DIR=/root/.ssh

USERHOST=$1
if [ -z "$USERHOST" ]
then
  echo "$0 username@backup-host container [container...]"
  echo "(If set, docker-backup output will be POSTed to \$PUSHGATEWAY)"
  exit 1
fi
shift

if [ -z "$REMOTE_DIR" -o -z "$PRIVATE_KEY" ]
then
  echo "Please set REMOTE_DIR and PRIVATE_KEY environment variables"
  exit 1
fi

[ -d "$BACKUPS" ] || mkdir "$BACKUPS"

push_metrics() {
  [ -z "$PUSHGATEWAY" ] && return
  curl --data-binary @- "$PUSHGATEWAY"
}

backup() {
  echo "[=] $1"
  while true
  do
    echo "$1: Backup"
    /docker-backup/docker-backup $OPTS -addr /docker.sock store "$BACKUPS/$1.tar" "$1" | push_metrics
    gzip "$BACKUPS/$1.tar"

    echo "$1: Upload"
    cat "$BACKUPS/$1.tar.gz" | ssh -i "$SSH_DIR/$PRIVATE_KEY" "$USERHOST" "mkdir -p $REMOTE_DIR;cat > $REMOTE_DIR/$1.tar.gz"
    
    echo "$1: Cleanup"
    rm "$BACKUPS/$1.tar.gz"
    date +"last_run{container=\"$1\"} %s" | push_metrics
  done
}

for c in $@
do
  backup $c &
done

wait
